@use "functions";

// !!! BUTTONS !!!
.bs-btn {
  margin: 0;
  text-transform: none;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  font-weight: inherit;
  appearance: button;
  -webkit-appearance: button;
  -moz-appearance: button;

  display: inline-block;
  padding: var(--spak-btn-padding-y) var(--spak-btn-padding-x);
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  transition: var(--spak-btn-transition);
  box-shadow: var(--spak-btn-box-shadow);
  &:focus {
    box-shadow: var(--spak-btn-focus-box-shadow);
  }
}

button:not(:disabled) {
  cursor: pointer;
}

.btn {
  @extend .bs-btn;
  cursor: pointer;
  background-color: var(--spak-btn-bg-color); //colore di sfondo
  border: 0.125em solid var(--spak-btn-border-color);
  color: var(--spak-btn-txt-color);
  border-radius: 6px;
  transition: ease 0.25s;
  &:hover,
  &:active,
  &:focus {
    background-color: var(--spak-btn-bg-active);
    border-color: var(--spak-btn-border-active);
    color: var(--spak-btn-font-active);
  }
  &:focus:not(:focus-visible),
  &:focus:not(:active) {
    outline: var(--spak-btn-outline-color-focus-not-active) solid 0.2em;
    box-shadow: var(--spak-btn-focus-box-shadow);
  }
  &:disabled {
    cursor: not-allowed;
    background-color: var(--spak-btn-disabled-bg-color);
    border-color: var(--spak-btn-disabled-border-color);
    color: var(--spak-btn-disabled-color);
  }

  //^^^ variante secondo colore ^^^
  &.color-2 {
    background-color: var(--spak-btn-2-bg-color);
    border-color: var(--spak-btn-2-border-color);
    color: var(--spak-btn-2-txt-color);
    box-shadow: var(--spak-btn-2-box-shadow);
    &:hover,
    &:active,
    &:focus {
      background-color: var(--spak-btn-2-bg-active);
      border-color: var(--spak-btn-2-border-active);
      color: var(--spak-btn-2-font-active);
    }
    &:focus:not(:focus-visible),
    &:focus:not(:active) {
      outline: var(--spak-btn-2-outline-color-focus-not-active) solid 0.2em;
      box-shadow: var(--spak-btn-2-focus-box-shadow);
    }
    &:disabled {
      cursor: not-allowed;
      background-color: var(--spak-btn-2-disabled-bg-color);
      border-color: var(--spak-btn-2-disabled-border-color);
      color: var(--spak-btn-2-disabled-color);
    }
  }
}

.btn-transparent {
  @extend .btn;
  cursor: pointer;
  background-color: transparent;
  border-color: transparent;
  color: inherit;
  border-radius: 0;
  transition: none;
  box-shadow: none;
  offset: 0;
  outline: 0;
  &:hover,
  &:active,
  &:focus {
    background-color: transparent;
    color: inherit;
    border-color: transparent;
  }
  &:focus:not(:focus-visible),
  &:focus:not(:active) {
    outline: #0000 solid 0em;
    box-shadow: none;
  }
  &:disabled {
    cursor: not-allowed;
    background-color: transparent;
  }
  &-icon {
    @extend .btn-transparent;
    font-size: 1.5em;
    padding: 0;
    margin: 0 0.5em;
  }
}

//-- btn icon animation
.btn-icon {
  display: inline-block;
  transform: rotate(0deg);
  transition: 0.5s;
  &.clicked {
    display: inline-block;
    transform: rotate(180deg);
    transition: 0.5s;
  }
  & i {
    display: inline-block;
    transform: rotate(0deg);
    transition: 0.5s;
    &.clicked {
      display: inline-block;
      transform: rotate(180deg);
      transition: 0.5s;
    }
  }
}

.btn-notification {
  position: relative;
  .icon-notification {
    position: absolute;
    height: 1em;
    width: 1em;
    border-radius: 50%;
    background-color: var(--spak-btn-notification-icon-color);
    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.25);
    border: 1px solid rgba(0, 0, 0, 0.2);

    top: -0.5em;
    right: -0.5em;
    transition: all 0.3s;
    opacity: 0;
    &.notification-show {
      transition: all 0.3s;
      opacity: 1;
      -webkit-animation: notification-pulse 1.8s linear 0s infinite alternate;
      animation: notification-pulse 1.8s linear 0s infinite alternate;
    }
  }
}

/*
^^^ UTILIZZO BTN NOTIFICA
  <button class="btn btn-notification">
    <span
      class="icon-notification"
      :class="{ 'notification-show': notifShow }"
    >
    </span>
    <i class="fa-regular fa-bell"></i>
  </button>
  ^^^evento per notifica
  <button @click="showNotifica()">notifica {{ notifShow }}</button> 
*/

// !!! INPUTS !!!
.icon-input {
  position: relative;
  box-sizing: border-box;
  clear: both;
  //& .form-control,
  & .spak.input {
    &.icon {
      &-left {
        padding-left: 2.5em;
      }
      &-right {
        padding-right: 2.5em;
      }
    }
  }
  //& .form-control ~ .icon,
  & .spak.input ~ .icon {
    color: var(--spak-form-icon-input-icon-color);
    height: 2.5em;
    pointer-events: none;
    position: absolute;
    bottom: 0;
    width: 2.5em;
    z-index: 4;
    &.is-left {
      left: 0;
    }
    &.is-right {
      right: 0;
    }
  }
}

// !!! FORM !!!

//*** checkbox & radio
.spak-check,
.spak-radio {
  display: inline-flex;
  align-content: center;
  align-items: center;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  gap: 0.5em;
  input {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-color: var(--spak-check-bg);
    margin: 0;
    font: inherit;
    color: currentColor;
    width: 1.15em;
    height: 1.15em;
    border: 0.15em solid var(--spak-check-input-border-color);
    transform: translateY(-0.075em);
    display: grid;
    place-content: center;
    &::before {
      content: "";
      width: 0.65em;
      height: 0.65em;
      transform: scale(0);
      transition: 120ms transform ease-in-out;
      background-color: CanvasText;
    }
    &:checked {
      &::before {
        transform: scale(1);
      }
    }
    &:focus {
      outline: max(2px, 0.15em) solid var(--spak-check-focus-outline-color);
    }
    &:focus-within {
      color: var(--spak-check-color);
    }
    &:disabled {
      cursor: not-allowed;
      background-color: var(--spak-check-disabled-bg-color);
      color: var(--spak-check-disabled-color);
      border-color: var(--spak-check-disabled-border-color);
    }
    //-- checkbox style
    &[type="checkbox"] {
      border-radius: 0.15em;
      &:checked {
        background-color: var(--spak-check-bg-checked);
      }
      &::before {
        //-- check symbol + color
        box-shadow: inset 1em 1em var(--spak-check-color);
        -webkit-clip-path: polygon(
          14% 44%,
          0 65%,
          50% 100%,
          100% 16%,
          80% 0%,
          43% 62%
        );
        clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
        transform-origin: bottom left;
      }
    }
    //-- radio style
    &[type="radio"] {
      border-radius: 50%;
      &:checked {
        background-color: var(--spak-radio-bg-checked);
      }
      &::before {
        border-radius: 50%;
        box-shadow: inset 1em 1em var(--spak-radio-inset-color);
      }
    }
  }
  + .spak-check,
  + .spak-radio {
    margin-top: 0.5em;
  }
}

//! radio only label
.spak-radio-button {
  input[type="radio"] {
    display: none;
    &:checked + label {
      background-color: var(--spak-btn-bg-active);
    }
  }
  label {
    @extend .btn;
  }
}

//*** form floating label ***
/* 
* usage
<div class="floating-label-container">
  <input class="float-field --t1">
  <label></label>
</div>
*/

.floating-label-container {
  position: relative;
  margin: var(--spak-float-container-margin);
  background-color: var(--spak-float-label-bg);
  //margin-top: add();
  input[type="number"] {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: textfield;
    &::-webkit-inner-spin-button,
    &::-webkit-outer-spin-button {
      appearance: none;
      -webkit-appearance: none;
      -moz-appearance: textfield;
      margin: 0;
    }
  }
  label {
    color: var(--spak-float-label-color);
    background-color: transparent;
    width: auto;
    font-size: var(--spak-float-label-font-size);
    padding: var(--spak-float-padding-label);
  }
  .float-field {
    outline: 0;
    width: 100%;
    padding: var(--spak-float-padding);
    transition: border-color 0.25s ease-in-out;
    border: 0.125em solid var(--spak-float-border-color);
    border-radius: 5px;
    background-color: transparent;
    font: inherit;
    line-height: 100%;
    &:focus,
    &:active {
      transition: var(--spak-btn-transition); //? da cambiare in futuro
      border-color: var(--spak-float-border-color-focus);
      box-shadow: 0 0 0 0.125em var(--spak-float-active-box-shadow-color);
      //box-shadow: 0;
    }
    &::-webkit-input-placeholder {
      color: var(--spak-float-placeholder-color);
    }
    &::-moz-placeholder {
      color: var(--spak-float-placeholder-color);
    }
    &:-ms-input-placeholder {
      color: var(--spak-float-placeholder-color);
    }
    &::-ms-input-placeholder {
      color: var(--spak-float-placeholder-color);
    }
    &::placeholder {
      color: var(--spak-float-placeholder-color);
    }

    //^^^ float field type 1 ^^^
    &.--t1 {
      //padding: var(--spak-float-padding);
      + label {
        position: absolute;
        top: 0;
        left: 0;
        //width: 100%;
        height: 100%;
        overflow: hidden;
        text-align: start;
        text-overflow: ellipsis;
        white-space: nowrap;
        pointer-events: none;
        border: 1px solid transparent;
        padding: var(--spak-float-padding-label);
        transform-origin: 0 0;
        @include functions.transition(var(--spak-float-transition));
      }
      //^^^ float field type 1 only bottom line ^^^
      &.bottom-line {
        border-width: 0 0 0.125rem 0;
        border-radius: 0;
        box-shadow: none;
        + label {
          background-color: transparent !important;
        }
      }
      &::-webkit-input-placeholder {
        color: transparent;
      }
      &::-moz-placeholder {
        color: transparent;
      }
      &:-ms-input-placeholder {
        color: transparent;
      }
      &::-ms-input-placeholder {
        color: transparent;
      }
      &::placeholder {
        color: transparent;
      }
      &:focus,
      &:not(:placeholder-shown) {
        //padding: var(--spak-float-padding-label);
        ~ label {
          width: auto;
          height: -webkit-max-content;
          height: -moz-max-content;
          height: max-content;
          padding: var(--spak-float-padding-label-focus);
          transform: var(--spak-float-label-transform);
          background-color: var(--spak-float-label-bg);
          color: var(--spak-float-label-color-active);
        }
      }
      // Duplicated because `:-webkit-autofill` invalidates other selectors when grouped
      &:-webkit-autofill {
        //padding: var(--spak-float-padding-label);
        ~ label {
          width: auto;
          height: -webkit-max-content;
          height: max-content;
          padding: var(--spak-float-padding-label-focus);
          transform: var(--spak-float-label-transform);
          background-color: var(--spak-float-label-bg);
          color: var(--spak-float-label-color-active);
        }
      }
    }
  }
}
//^^^ SELECT CON FLOAT LABEL -> .spak.select.floating-label-container [...]
/* 
<div class="spak select floating-label-container">
    <select >
      <option >
         option 
      </option>
    </select>
    <label>label</label>
  </div>
*/
.spak.select.floating-label-container,
.spak.textarea-floating-label-container {
  position: relative;
  select,
  textarea {
    border: 0.125em solid var(--spak-float-border-color);
    border-radius: 5px;
    &:focus,
    &:active {
      border-color: var(--spak-float-border-color-focus);
      box-shadow: 0;
    }
  }
  label {
    position: absolute;
    top: 0;
    left: 0;
    background-color: var(--spak-float-label-bg);
    padding: 0 calc(0.5em - 1px); //var(--spak-float-padding-label-focus);
    transform: var(--spak-float-label-transform);
    color: var(--spak-float-label-color-active);
  }
  &.bottom-line {
    select,
    textarea {
      border-width: 0 0 0.125rem 0;
      border-radius: 0;
      box-shadow: none;
    }
    label {
      background-color: transparent !important;
    }
  }
}

//!!! OVERRIDE BULMA !!!
.spak {
  &::-webkit-input-placeholder {
    color: var(--spak-placeholder-color);
  }
  &::-moz-placeholder {
    color: var(--spak-placeholder-color);
  }
  &:-ms-input-placeholder {
    color: var(--spak-placeholder-color);
  }
  &::-ms-input-placeholder {
    color: var(--spak-placeholder-color);
  }
  &::placeholder {
    color: var(--spak-placeholder-color);
  }
  &.input,
  &.select select,
  &.textarea {
    background-color: var(--spak-bulma-form-bg-color);
    border-color: var(--spak-bulma-form-border-color);
    color: var(--spak-bulma-form-color);
  }
  &.select select:focus,
  &.textarea:focus,
  &.input:focus,
  &.select select:active,
  &.textarea:active,
  &.input:active {
    transition: var(--spak-btn-transition); //? da cambiare in futuro
    box-shadow: var(--spak-bulma-form-focus-box-shadow-is-active-input);
  }
  &.textarea {
    box-shadow: var(--spak-bulma-form-focus-box-shadow-textarea);
    border-radius: var(--spak-bulma-form-field-border-radius);
    padding: var(--spak-form-input-padding);
  }
  &.input {
    box-shadow: var(--spak-bulma-form-focus-box-shadow-input);
    border-radius: var(--spak-bulma-form-field-border-radius);
    padding: var(--spak-form-input-padding);
  }
  &.field.has-addons {
    margin: 0;
  }
  &.select select {
    width: 100%;
  }
  &.select:not(.is-multiple):not(.is-loading)::after {
    border-color: var(--spak-bulma-form-focus-border-color);
  }
}
.container-select-label-top {
  display: flex;
  flex-direction: column;
}

.spak.field.has-addons {
  //*** pulsante aggregato con animazione del campo input
  &.--t-animate {
    .control.--animate-el {
      width: 0;
      min-width: none;
      visibility: hidden;
      transition: width 300ms ease-in-out, visibility 300ms ease-in-out,
        border-radius 300ms ease 0ms;
      //-- per focus quando cliccato -> transitionend su elemento .control.--animate-el
      &.--active-el {
        width: 10em;
        visibility: visible;
        & ~ .control.--animate-btn {
          //-- active -- btn is right
          button {
            transition-delay: 0ms;
            border-radius: 0 var(--spak-btn-border-radius)
              var(--spak-btn-border-radius) 0;
          }
        }
      }
      & ~ .control.--animate-btn {
        //-- non active -- btn is right
        button {
          border-radius: var(--spak-btn-border-radius);
        }
      }
    }
  }
}

//!!! SWEETALERT BUTTON
.swal-deny {
  background-color: transparent;
  color: var(--spak-sweetalert-color);
  margin: 0.3em;
  font-size: 0.8em;
  padding: 0.3em;
  border: none;
  background-color: var(--spak-sweetalert-bg-color);
  &:hover,
  &:focus,
  &:active {
    background-color: var(--spak-sweetalert-active-bg-color);
    color: var(--spak-sweetalert-color);
  }
}

.swal-cancel {
  @extend .btn;
  color: var(--spak-sweetalert-color);
  background-color: var(--spak-sweetalert-bg-color);
  border-color: var(--spak-sweetalert-border-color);
  margin-left: 0.8em;
  &:hover,
  &:focus,
  &:active {
    background-color: var(--spak-sweetalert-active-bg-color);
    border-color: var(--spak-sweetalert-active-border-color);
    color: var(--spak-sweetalert-color);
  }
}
